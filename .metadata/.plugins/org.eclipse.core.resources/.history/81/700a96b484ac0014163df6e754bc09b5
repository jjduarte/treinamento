package br.com.paripassu.core.dao.impl;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import br.com.paripassu.api.entidades.Fornecedor;
import br.com.paripassu.api.entidades.Produto;
import br.com.paripassu.core.dao.interfaces.ProdutoDAO;

public class ProdutoDAOImpl implements ProdutoDAO {

	
	
	public static final String INSERIR_PRODUTO = "INSERT INTO en_produto VALUES (nextval('enProduto_idProduto_seq'), ?)";
	public static final String ALTERAR_PRODUTO = "UPDATE en_produto SET nome = ?  where id_produto = ?";
	public static final String EXCLUIR_PRODUTO = "DELETE * FROM en_produto WHERE id_produto = ?";
	public static final String LISTAR_PRODUTO = "SELECT id_produto, nome FROM en_produto";
	
	@Override
	public void inserir(Connection conn, Produto object) throws Exception {
		try {
		   PreparedStatement ps = conn.prepareStatement(INSERIR_PRODUTO);
		   ps.setString( 2, object.getNome() );
		   ps.executeUpdate();
		   ps.close();
		  }
		  catch( SQLException e ) {
		  }
		
	}

	@Override
	public void alterar(Connection conn, Produto object) throws Exception {
		try {
			   
		   PreparedStatement ps = conn.prepareStatement(ALTERAR_PRODUTO);
		   ps.setLong( 1, object.getIdProduto() );
		   ps.setString( 2, object.getNome() );
		   ps.executeUpdate();
		   ps.close();
		  }
		  catch( SQLException e ) {
		  }
		
	}

	@Override
	public void excluir(Connection conn, Integer id) throws Exception {
		try {
		   PreparedStatement ps = conn.prepareStatement(EXCLUIR_PRODUTO);
		   ps.setLong( 1, id );
		   ps.executeUpdate();
		   ps.close();
		  }
		  catch( SQLException e ) {
		  }
		
	}

	@Override
	public List<Produto> listar(Connection conn) throws Exception {
		PreparedStatement ps = null;
		List<Fornecedor> listaProdutos = new ArrayList<Fornecedor>();
        try{
            ps = conn.prepareStatement(LISTAR_PRODUTO);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
               Produto p = new Produto();
 			   p.setIdProduto(rs.getInt(1));
 			   p.setNome(rs.getString(2));
 			   listaProdutos.add(p);
 		   }
            if(listaProdutos.size() > 0){
                System.out.println("Lista de produtos cadastrados");
            }else 
            	System.out.println("Lista de produtos vazia!");
        }catch(SQLException e){
            e.printStackTrace();
        }finally{
            try {
                ps.close();
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
		return listaFornecedores;
		   
		
		
		
		
			   
		  
	}

}
